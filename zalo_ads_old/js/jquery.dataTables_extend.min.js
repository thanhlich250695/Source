
// http://cdn.datatables.net/plug-ins/e9421181788/integration/bootstrap/3/dataTables.bootstrap.js 
/* Set the defaults for DataTables initialisation */
$.extend( true, $.fn.dataTable.defaults, {
	"sDom":
		"<'row row-head'<'col-xs-6 col-display'l><'col-xs-6 col-search'f>r>"+
		"t"+
		"<'row row-head2'<'col-xs-6 col-display2'i><'col-xs-6 col-pag'p>>",
	"oLanguage": {
		"sLengthMenu": "_MENU_ "
	}
} );


/* Default class modification */
$.extend( $.fn.dataTableExt.oStdClasses, {
	"sWrapper": "dataTables_wrapper form-inline",
	"sFilterInput": "form-control input-sm",
	"sLengthSelect": "form-control input-sm"
} );

// In 1.10 we use the pagination renderers to draw the Bootstrap paging,
// rather than  custom plug-in
if ( $.fn.dataTable.Api ) {
	$.fn.dataTable.defaults.renderer = 'bootstrap';
	$.fn.dataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {
		var api = new $.fn.dataTable.Api( settings );
		var classes = settings.oClasses;
		var lang = settings.oLanguage.oPaginate;
		var btnDisplay, btnClass;

		var attach = function( container, buttons ) {
			var i, ien, node, button;
			var clickHandler = function ( e ) {
				e.preventDefault();
				if ( e.data.action !== 'ellipsis' ) {
					api.page( e.data.action ).draw( false );
				}
			};

			for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
				button = buttons[i];

				if ( $.isArray( button ) ) {
					attach( container, button );
				}
				else {
					btnDisplay = '';
					btnClass = '';

					switch ( button ) {
						case 'ellipsis':
							btnDisplay = '&hellip;';
							btnClass = 'disabled';
							break;

						case 'first':
							btnDisplay = lang.sFirst;
							btnClass = button + (page > 0 ?
								'' : ' disabled');
							break;

						case 'previous':
							btnDisplay = lang.sPrevious;
							btnClass = button + (page > 0 ?
								'' : ' disabled');
							break;

						case 'next':
							btnDisplay = lang.sNext;
							btnClass = button + (page < pages-1 ?
								'' : ' disabled');
							break;

						case 'last':
							btnDisplay = lang.sLast;
							btnClass = button + (page < pages-1 ?
								'' : ' disabled');
							break;

						default:
							btnDisplay = button + 1;
							btnClass = page === button ?
								'active' : '';
							break;
					}

					if ( btnDisplay ) {
						node = $('<li>', {
								'class': classes.sPageButton+' '+btnClass,
								'aria-controls': settings.sTableId,
								'tabindex': settings.iTabIndex,
								'id': idx === 0 && typeof button === 'string' ?
									settings.sTableId +'_'+ button :
									null
							} )
							.append( $('<a>', {
									'href': '#'
								} )
								.html( btnDisplay )
							)
							.appendTo( container );

						settings.oApi._fnBindAction(
							node, {action: button}, clickHandler
						);
					}
				}
			}
		};

		attach(
			$(host).empty().html('<ul class="pagination"/>').children('ul'),
			buttons
		);
	}
}
else {
	// Integration for 1.9-
	$.fn.dataTable.defaults.sPaginationType = 'bootstrap';

	/* API method to get paging information */
	$.fn.dataTableExt.oApi.fnPagingInfo = function ( oSettings )
	{
		return {
			"iStart":         oSettings._iDisplayStart,
			"iEnd":           oSettings.fnDisplayEnd(),
			"iLength":        oSettings._iDisplayLength,
			"iTotal":         oSettings.fnRecordsTotal(),
			"iFilteredTotal": oSettings.fnRecordsDisplay(),
			"iPage":          oSettings._iDisplayLength === -1 ?
				0 : Math.ceil( oSettings._iDisplayStart / oSettings._iDisplayLength ),
			"iTotalPages":    oSettings._iDisplayLength === -1 ?
				0 : Math.ceil( oSettings.fnRecordsDisplay() / oSettings._iDisplayLength )
		};
	};

	/* Bootstrap style pagination control */
	$.extend( $.fn.dataTableExt.oPagination, {
		"bootstrap": {
			"fnInit": function( oSettings, nPaging, fnDraw ) {
				var oLang = oSettings.oLanguage.oPaginate;
				var fnClickHandler = function ( e ) {
					e.preventDefault();
					if ( oSettings.oApi._fnPageChange(oSettings, e.data.action) ) {
						fnDraw( oSettings );
					}
				};

				$(nPaging).append(
					'<ul class="pagination">'+
						'<li class="prev disabled"><a href="#">&larr; '+oLang.sPrevious+'</a></li>'+
						'<li class="next disabled"><a href="#">'+oLang.sNext+' &rarr; </a></li>'+
					'</ul>'
				);
				var els = $('a', nPaging);
				$(els[0]).bind( 'click.DT', { action: "previous" }, fnClickHandler );
				$(els[1]).bind( 'click.DT', { action: "next" }, fnClickHandler );
			},

			"fnUpdate": function ( oSettings, fnDraw ) {
				var iListLength = 5;
				var oPaging = oSettings.oInstance.fnPagingInfo();
				var an = oSettings.aanFeatures.p;
				var i, ien, j, sClass, iStart, iEnd, iHalf=Math.floor(iListLength/2);

				if ( oPaging.iTotalPages < iListLength) {
					iStart = 1;
					iEnd = oPaging.iTotalPages;
				}
				else if ( oPaging.iPage <= iHalf ) {
					iStart = 1;
					iEnd = iListLength;
				} else if ( oPaging.iPage >= (oPaging.iTotalPages-iHalf) ) {
					iStart = oPaging.iTotalPages - iListLength + 1;
					iEnd = oPaging.iTotalPages;
				} else {
					iStart = oPaging.iPage - iHalf + 1;
					iEnd = iStart + iListLength - 1;
				}

				for ( i=0, ien=an.length ; i<ien ; i++ ) {
					// Remove the middle elements
					$('li:gt(0)', an[i]).filter(':not(:last)').remove();

					// Add the new list items and their event handlers
					for ( j=iStart ; j<=iEnd ; j++ ) {
						sClass = (j==oPaging.iPage+1) ? 'class="active"' : '';
						$('<li '+sClass+'><a href="#">'+j+'</a></li>')
							.insertBefore( $('li:last', an[i])[0] )
							.bind('click', function (e) {
								e.preventDefault();
								oSettings._iDisplayStart = (parseInt($('a', this).text(),10)-1) * oPaging.iLength;
								fnDraw( oSettings );
							} );
					}

					// Add / remove disabled classes from the static elements
					if ( oPaging.iPage === 0 ) {
						$('li:first', an[i]).addClass('disabled');
					} else {
						$('li:first', an[i]).removeClass('disabled');
					}

					if ( oPaging.iPage === oPaging.iTotalPages-1 || oPaging.iTotalPages === 0 ) {
						$('li:last', an[i]).addClass('disabled');
					} else {
						$('li:last', an[i]).removeClass('disabled');
					}
				}
			}
		}
	} );
}


/*
 * TableTools Bootstrap compatibility
 * Required TableTools 2.1+
 */
if ( $.fn.DataTable.TableTools ) {
	// Set the classes that TableTools uses to something suitable for Bootstrap
	$.extend( true, $.fn.DataTable.TableTools.classes, {
		"container": "DTTT btn-group",
		"buttons": {
			"normal": "btn btn-default",
			"disabled": "disabled"
		},
		"collection": {
			"container": "DTTT_dropdown dropdown-menu",
			"buttons": {
				"normal": "",
				"disabled": "disabled"
			}
		},
		"print": {
			"info": "DTTT_print_info modal"
		},
		"select": {
			"row": "active"
		}
	} );

	// Have the collection use a bootstrap compatible dropdown
	$.extend( true, $.fn.DataTable.TableTools.DEFAULTS.oTags, {
		"collection": {
			"container": "ul",
			"button": "li",
			"liner": "a"
		}
	} );
}

jQuery.extend( jQuery.fn.dataTableExt.oSort, {
	"num-html-pre": function ( a ) {
		var x = String(a).replace( /<[\s\S]*?>/g, "").replace( /,/g, "" ).replace( /\|/g, "," );
		return parseFloat( x );
	},

	"num-html-asc": function ( a, b ) {
		return ((a < b) ? -1 : ((a > b) ? 1 : 0));
	},

	"num-html-desc": function ( a, b ) {
		return ((a < b) ? 1 : ((a > b) ? -1 : 0));
	}
} );

// datatables.responsive.js
"use strict";function ResponsiveDatatablesHelper(e,t,s){"string"==typeof e?this.tableElement=$(e):this.tableElement=e,this.api=this.tableElement.dataTable().api(),this.columnIndexes=[],this.columnsShownIndexes=[],this.columnsHiddenIndexes=[],this.currentBreakpoint="",this.lastBreakpoint="",this.lastColumnsHiddenIndexes=[];var i=window.location.pathname.split("/").pop(),n=this.api.settings().context[0];this.tableId=n.sTableId,this.saveState=n.oInit.bStateSave,this.cookieName="DataTablesResponsiveHelper_"+this.tableId+(i?"_"+i:""),this.lastStateExists=!1,this.expandColumn=void 0,this.origBreakpointsDefs=void 0,this.breakpoints={},this.options={hideEmptyColumnsInRowDetail:!1,clickOn:"icon",showDetail:null,hideDetail:null},this.expandIconTemplate='<span class="responsiveExpander"></span>',this.rowTemplate='<tr class="row-detail"><td><ul><!--column item--></ul></td></tr>',this.rowLiTemplate='<li><span class="columnTitle"><!--column title--></span>: <span class="columnValue"><!--column value--></span></li>',this.disabled=!0,this.skipNextWindowsWidthChange=!1,this.init(t,s)}ResponsiveDatatablesHelper.prototype.init=function(e,t){this.origBreakpointsDefs=e,this.initBreakpoints(),this.disable(!1),$.extend(this.options,t)},ResponsiveDatatablesHelper.prototype.initBreakpoints=function(){if(this.saveState&&this.getState(),!this.lastStateExists){var e=[];for(var t in this.origBreakpointsDefs)e.push({name:t,upperLimit:this.origBreakpointsDefs[t],columnsToHide:[]});e.sort(function(e,t){return e.upperLimit-t.upperLimit});for(var s=0,i=0;i<e.length;i++)e[i].lowerLimit=s,s=e[i].upperLimit;e.push({name:"always",lowerLimit:s,upperLimit:1/0,columnsToHide:[]}),this.breakpoints={};var i,n;for(i=0,n=e.length;n>i;i++)this.breakpoints[e[i].name]=e[i];var a=this.api.columns().header(),o=[];for(i=0,n=a.length;n>i;i++)this.api.column(i).visible()&&(this.columnIndexes.push(i),o.push(a[i]));for(var l=0;l<o.length;l++){var r=$(o[l]);"expand"===r.attr("data-class")&&(this.expandColumn=this.columnIndexes[l]);var d=r.attr("data-hide");if(void 0!==d)for(var h=d.split(/,\s*/),i=0;i<h.length;i++){var p=h[i];if("always"===p)for(var t in this.breakpoints)"default"!==this.breakpoints[t].name&&this.breakpoints[t].columnsToHide.push(this.columnIndexes[l]);else void 0!==this.breakpoints[p]&&this.breakpoints[p].columnsToHide.push(this.columnIndexes[l])}}}},ResponsiveDatatablesHelper.prototype.setWindowsResizeHandler=function(e){if(void 0===e&&(e=!0),e){var t=this;$(window).bind("resize",function(){t.respond()})}else $(window).unbind("resize")},ResponsiveDatatablesHelper.prototype.respond=function(){if(!this.disabled){var e=this,t=$(window).width(),s=[];for(var i in this.breakpoints){var n=this.breakpoints[i];(!n.lowerLimit||t>n.lowerLimit)&&(!n.upperLimit||t<=n.upperLimit)&&(this.currentBreakpoint=n.name,s=n.columnsToHide)}var a=!1;if(!this.skipNextWindowsWidthChange)if(0===this.lastBreakpoint.length&&s.length)a=!0;else if(this.lastBreakpoint!=this.currentBreakpoint)a=!0;else if(this.columnsHiddenIndexes.length!==s.length)a=!0;else{var o=this.difference(this.columnsHiddenIndexes,s).length,l=this.difference(s,this.columnsHiddenIndexes).length;a=o+l>0}a&&(this.skipNextWindowsWidthChange=!0,this.columnsHiddenIndexes=s,this.columnsShownIndexes=this.difference(this.columnIndexes,this.columnsHiddenIndexes),this.showHideColumns(),this.lastBreakpoint=this.currentBreakpoint,this.setState(),this.skipNextWindowsWidthChange=!1),this.columnsHiddenIndexes.length?(this.tableElement.addClass("has-columns-hidden"),$("tr.detail-show",this.tableElement).each(function(t,s){var i=$(s);0===i.next(".row-detail").length&&ResponsiveDatatablesHelper.prototype.showRowDetail(e,i)})):(this.tableElement.removeClass("has-columns-hidden"),$("tr.row-detail",this.tableElement).each(function(t){ResponsiveDatatablesHelper.prototype.hideRowDetail(e,$(this).prev())}))}},ResponsiveDatatablesHelper.prototype.showHideColumns=function(){for(var e=0,t=this.columnsShownIndexes.length;t>e;e++)this.api.column(this.columnsShownIndexes[e]).visible(!0);for(var e=0,t=this.columnsHiddenIndexes.length;t>e;e++)this.api.column(this.columnsHiddenIndexes[e]).visible(!1);var s=this;$("tr.row-detail",this.tableElement).each(function(){ResponsiveDatatablesHelper.prototype.hideRowDetail(s,$(this).prev())}),this.tableElement.hasClass("has-columns-hidden")&&$("tr.detail-show",this.tableElement).each(function(e,t){ResponsiveDatatablesHelper.prototype.showRowDetail(s,$(t))})},ResponsiveDatatablesHelper.prototype.createExpandIcon=function(e){if(!this.disabled)for(var t=$("td",e),s=0,i=t.length;i>s;s++){var n=t[s],a=this.api.cell(n).index().column;if(n=$(n),a===this.expandColumn){if(0==$("span.responsiveExpander",n).length)switch(n.prepend(this.expandIconTemplate),this.options.clickOn){case"cell":n.on("click",{responsiveDatatablesHelperInstance:this},this.showRowDetailEventHandler);break;case"row":$(e).on("click",{responsiveDatatablesHelperInstance:this},this.showRowDetailEventHandler);break;default:n.on("click","span.responsiveExpander",{responsiveDatatablesHelperInstance:this},this.showRowDetailEventHandler)}break}}},ResponsiveDatatablesHelper.prototype.showRowDetailEventHandler=function(e){var t=e.data.responsiveDatatablesHelperInstance;if(!t.disabled){var s=$(this);if(s.closest("table").hasClass("has-columns-hidden")){var i=s.closest("tr");i.hasClass("detail-show")?ResponsiveDatatablesHelper.prototype.hideRowDetail(t,i):ResponsiveDatatablesHelper.prototype.showRowDetail(t,i),i.toggleClass("detail-show"),e.stopPropagation()}}},ResponsiveDatatablesHelper.prototype.showRowDetail=function(e,t){for(var s=e.api,i=s.columns().header(),n=$(e.rowTemplate),a=$("ul",n),o=0;o<e.columnsHiddenIndexes.length;o++){var l=e.columnsHiddenIndexes[o],r=s.row(t).index(),d=s.cell(r,l).node();if(!e.options.hideEmptyColumnsInRowDetail||d.innerHTML.trim().length){var h=$(e.rowLiTemplate),p=$(i[l]).attr("data-name");$(".columnTitle",h).html(void 0!==p?p:i[l].innerHTML);for(var c=$(d).contents(),m=c.clone(),u=0,v=c.length;v>u;u++){var b=c[u];b.nodeType===Node.ELEMENT_NODE&&"SELECT"===b.tagName&&(m[u].selectedIndex=b.selectedIndex)}$(".columnValue",h).append(m).data("originalTdSource",d),h.attr("data-column",l);var f=$(d).attr("class");"undefined"!==f&&f!==!1&&""!==f&&h.addClass(f),a.append(h)}}var w=e.columnIndexes.length-e.columnsHiddenIndexes.length;n.find("> td").attr("colspan",w),t.after(n),e.options.showDetail&&e.options.showDetail(n)},ResponsiveDatatablesHelper.prototype.hideRowDetail=function(e,t){var s=t.next(".row-detail");e.options.hideDetail&&e.options.hideDetail(s),s.find("li").each(function(){var e=$(this).find("span.columnValue"),t=e.contents(),s=e.data("originalTdSource");$(s).empty().append(t)}),s.remove()},ResponsiveDatatablesHelper.prototype.disable=function(e){this.disabled=void 0===e||e,this.disabled?(this.setWindowsResizeHandler(!1),$("tbody tr.row-detail",this.tableElement).remove(),$("tbody tr",this.tableElement).removeClass("detail-show"),$("tbody tr span.responsiveExpander",this.tableElement).remove(),this.columnsHiddenIndexes=[],this.columnsShownIndexes=this.columnIndexes,this.showHideColumns(),this.tableElement.removeClass("has-columns-hidden"),this.tableElement.off("click","span.responsiveExpander",this.showRowDetailEventHandler)):this.setWindowsResizeHandler()},ResponsiveDatatablesHelper.prototype.getState=function(){var e=JSON.parse(localStorage.getItem(this.cookieName));e&&(this.columnIndexes=e.columnIndexes,this.breakpoints=e.breakpoints,this.expandColumn=e.expandColumn,this.lastBreakpoint=e.lastBreakpoint,this.lastStateExists=!0)},ResponsiveDatatablesHelper.prototype.setState=function(){var e=this.difference(this.lastColumnsHiddenIndexes,this.columnsHiddenIndexes).length,t=this.difference(this.columnsHiddenIndexes,this.lastColumnsHiddenIndexes).length;if(e+t>0){var s={columnIndexes:this.columnIndexes,columnsHiddenIndexes:this.columnsHiddenIndexes,breakpoints:this.breakpoints,expandColumn:this.expandColumn,lastBreakpoint:this.lastBreakpoint};localStorage.setItem(this.cookieName,JSON.stringify(s)),this.lastColumnsHiddenIndexes=this.columnsHiddenIndexes.slice(0)}},ResponsiveDatatablesHelper.prototype.difference=function(e,t){var s,i=[],n={};for(s=t.length-1;s>=0;s--)n[t[s]]=!0;for(s=e.length-1;s>=0;s--)n[e[s]]!==!0&&i.push(e[s]);return i};